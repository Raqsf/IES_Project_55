{"version":3,"file":"sassy-datepicker.cjs.development.js","sources":["../src/util.ts","../src/month-picker.tsx","../src/date-button.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/date-picker.tsx"],"sourcesContent":["const MONTHS: { [key: number]: string } = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n\nexport const getMonthNameFromNumber = (month: number): string => {\n  if (month < 0 || month > 11) {\n    throw new Error(`Invalid month number: ${month}`);\n  }\n  return MONTHS[month];\n};\n\nexport const getDatesOfMonth = (date: Date): { d: Date; active: boolean }[] => {\n  // generate dates of each week of the month including the residue dates\n  // of the last week of previous month and first week of next month\n  const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  const firstDayOfMonthWeekDay = firstDayOfMonth.getDay();\n  const lastDayOfMonthWeekDay = lastDayOfMonth.getDay();\n\n  const previousMonth = new Date(date.getFullYear(), date.getMonth(), 0);\n  const previousMonthLastDay = new Date(\n    previousMonth.getFullYear(),\n    previousMonth.getMonth() + 1,\n    0\n  );\n\n  const nextMonth = new Date(date.getFullYear(), date.getMonth() + 2, 0);\n\n  const dates: { d: Date; active: boolean }[] = [];\n\n  for (let i = 0; i < firstDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(\n        previousMonth.getFullYear(),\n        previousMonth.getMonth(),\n        previousMonthLastDay.getDate() - firstDayOfMonthWeekDay + i + 1\n      ),\n      active: false,\n    });\n  }\n\n  for (let i = 0; i < lastDayOfMonth.getDate(); i++) {\n    dates.push({\n      d: new Date(date.getFullYear(), date.getMonth(), i + 1),\n      active: true,\n    });\n  }\n\n  for (let i = 0; i < 6 - lastDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(nextMonth.getFullYear(), nextMonth.getMonth(), i + 1),\n      active: false,\n    });\n  }\n\n  return dates;\n};\n","import React from 'react';\nimport { getMonthNameFromNumber } from './util';\n\nexport type MonthPickerProps = {\n  month: number;\n  year: number;\n  nextMonth: () => void;\n  prevMonth: () => void;\n};\n\nconst MonthPicker: React.FC<MonthPickerProps> = ({\n  month,\n  year,\n  nextMonth,\n  prevMonth,\n}) => {\n  return (\n    <div className=\"sdp--month-picker\">\n      <button\n        className=\"sdp--square-btn sdp--square-btn__shadowed\"\n        onClick={prevMonth}\n        aria-label=\"Go to previous month\"\n        type=\"button\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 256 256\"\n        >\n          <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\n          <polyline\n            points=\"160 208 80 128 160 48\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          ></polyline>\n        </svg>\n      </button>\n      <p\n        className=\"sdp--text sdp--month-name\"\n        aria-label={`${getMonthNameFromNumber(\n          month\n        )} ${year} is currently open in Date Picker`}\n        tabIndex={0}\n      >\n        {getMonthNameFromNumber(month)} {year}\n      </p>\n      <button\n        className=\"sdp--square-btn sdp--square-btn__shadowed\"\n        onClick={nextMonth}\n        aria-label=\"Go to next month\"\n        type=\"button\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 256 256\"\n        >\n          <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\n          <polyline\n            points=\"96 48 176 128 96 208\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          ></polyline>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default MonthPicker;\n","import * as React from 'react';\n\ntype DateButtonProps = {\n  date: Date;\n  active: boolean;\n  selected: boolean;\n  onClick: (date: Date) => void;\n};\n\nconst dateOptions: Intl.DateTimeFormatOptions = {\n  weekday: 'long',\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n};\n\nconst DateButton: React.FC<DateButtonProps> = ({\n  date,\n  active,\n  onClick,\n  selected,\n}) => (\n  <button\n    className={`sdp--square-btn sdp--date-btn ${\n      selected ? 'sdp--date-btn__selected' : ''\n    } sdp--text ${!active ? 'sdp--text__inactive' : ''}`}\n    onClick={() => onClick(date)}\n    tabIndex={active ? 0 : -1}\n    aria-label={`${\n      selected ? 'Currently selected' : 'Select'\n    } ${date.toLocaleDateString('en-US', dateOptions)}`}\n    type=\"button\"\n  >\n    {date.getDate()}\n  </button>\n);\n\nexport default React.memo(\n  DateButton,\n  (p, n) =>\n    p.date.getDay() === n.date.getDay() &&\n    p.active === n.active &&\n    p.selected === n.selected\n);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\n\nimport MonthPicker from './month-picker';\nimport DateButton from './date-button';\nimport { getDatesOfMonth } from './util';\nimport './styles.css';\n\nexport type DatePickerProps = {\n  /**\n   * This function is called when the selected date is changed.\n   */\n  onChange?: (date: Date) => void;\n  /**\n   * The selected date.\n   */\n  selected?: Date;\n  /**\n   * The minimum date that can be selected (inclusive).\n   */\n  minDate?: Date;\n  /**\n   * The maximum date that can be selected (inclusive).\n   */\n  maxDate?: Date;\n} & React.PropsWithRef<\n  Omit<React.HTMLProps<HTMLDivElement>, 'onChange' | 'selected'>\n>;\n\nconst DatePicker = React.forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      onChange,\n      selected = new Date(),\n      minDate = new Date(1900, 0, 1),\n      maxDate,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const minDateVal = minDate.getTime();\n    const maxDateVal =\n      typeof maxDate === 'undefined'\n        ? Number.POSITIVE_INFINITY\n        : maxDate.getTime();\n\n    const [monthDate, setMonthDate] = React.useState<Date>(selected);\n    const [selectedDate, setSelectedDate] = React.useState<Date>(selected);\n\n    const nextMonth = React.useCallback(\n      () =>\n        setMonthDate(d => {\n          const m = d.getMonth();\n          const y = d.getFullYear();\n          if (m === 11) {\n            return new Date(y + 1, 0);\n          } else {\n            return new Date(y, m + 1);\n          }\n        }),\n      [monthDate]\n    );\n\n    const prevMonth = React.useCallback(\n      () =>\n        setMonthDate(d => {\n          const m = d.getMonth();\n          const y = d.getFullYear();\n          if (m === 0) {\n            return new Date(y - 1, 11);\n          } else {\n            return new Date(y, m - 1);\n          }\n        }),\n      [monthDate]\n    );\n\n    const setNewSelectedDate = (date: Date) => {\n      setSelectedDate(date);\n      onChange?.(date);\n    };\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (selected.getTime() > maxDateVal || selected.getTime() < minDateVal)\n    ) {\n      console.warn(\n        'Selected date must fall in the range of maxDate and minDate'\n      );\n    }\n\n    return (\n      <div\n        className={`sdp ${className}`}\n        aria-label=\"Date Picker\"\n        tabIndex={0}\n        ref={ref}\n        {...props}\n      >\n        <MonthPicker\n          month={monthDate.getMonth()}\n          year={monthDate.getFullYear()}\n          nextMonth={nextMonth}\n          prevMonth={prevMonth}\n        />\n        <div className=\"sdp--dates-grid\">\n          <p className=\"sdp--text sdp--text__inactive\">Su</p>\n          <p className=\"sdp--text sdp--text__inactive\">Mo</p>\n          <p className=\"sdp--text sdp--text__inactive\">Tu</p>\n          <p className=\"sdp--text sdp--text__inactive\">We</p>\n          <p className=\"sdp--text sdp--text__inactive\">Th</p>\n          <p className=\"sdp--text sdp--text__inactive\">Fr</p>\n          <p className=\"sdp--text sdp--text__inactive\">Sa</p>\n          {getDatesOfMonth(monthDate).map(({ d, active }) => {\n            const dVal = d.getTime();\n\n            return (\n              <DateButton\n                key={dVal}\n                date={d}\n                active={dVal >= minDateVal && dVal <= maxDateVal && active}\n                selected={selectedDate.toDateString() === d.toDateString()}\n                onClick={setNewSelectedDate}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default DatePicker;\n"],"names":["MONTHS","getMonthNameFromNumber","month","Error","getDatesOfMonth","date","firstDayOfMonth","Date","getFullYear","getMonth","lastDayOfMonth","firstDayOfMonthWeekDay","getDay","lastDayOfMonthWeekDay","previousMonth","previousMonthLastDay","nextMonth","dates","i","push","d","getDate","active","MonthPicker","year","prevMonth","React","className","onClick","type","xmlns","width","height","fill","viewBox","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","tabIndex","dateOptions","weekday","day","DateButton","selected","toLocaleDateString","p","n","DatePicker","ref","onChange","minDate","maxDate","props","minDateVal","getTime","maxDateVal","Number","POSITIVE_INFINITY","monthDate","setMonthDate","selectedDate","setSelectedDate","m","y","setNewSelectedDate","process","console","warn","map","dVal","key","toDateString"],"mappings":"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"}